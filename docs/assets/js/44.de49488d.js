(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{250:function(t,e,s){"use strict";s.r(e);var a=s(0),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"vuex-테스트하기"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vuex-테스트하기"}},[t._v("#")]),t._v(" Vuex 테스트하기")]),t._v(" "),s("p",[t._v("다음 몇 개의 가이드에서는 Vuex를 테스트하는 방법에 대해 다룹니다.")]),t._v(" "),s("h2",{attrs:{id:"vuex-테스트의-두-가지-측면"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vuex-테스트의-두-가지-측면"}},[t._v("#")]),t._v(" Vuex 테스트의 두 가지 측면")]),t._v(" "),s("p",[t._v("일반적으로 컴포넌트는 아래의 경우에 Vuex와 상호작용 합니다.")]),t._v(" "),s("ol",[s("li",[t._v("뮤테이션으로 커밋하기")]),t._v(" "),s("li",[t._v("액션을 디스패치하기")]),t._v(" "),s("li",[s("code",[t._v("$store.state")]),t._v("나 getter를 통해 상태에 접근하기")])]),t._v(" "),s("p",[t._v("이런 테스트는 컴포넌트가 Vuex 스토어(store)의 현재 상태를 바탕으로 정확하게 동작하는지 어설트(assert)합니다. 뮤테이터(mutators)나 액션(actions) 또는 게터(getters)의 구현체에 대해 알 필요는 없습니다.")]),t._v(" "),s("p",[t._v("뮤테이션(mutations)이나 게터처럼 스토어에 의해 수행되는 임의의 로직은 독립적으로 테스트할 수 있습니다. Vuex 스토어가 일반 자바스크립트 함수로 이루어져있어서 쉽게 유닛을 테스트할 수 있기 때문입니다.")]),t._v(" "),s("p",[t._v("다음 가이드는 Vuex 스토어를 사용하는 컴포넌트를 테스트하는 몇 가지 테크닉을 소개합니다. 그리고 스토어의 상태를 바탕으로 올바르게 동작하는지 확인합니다. 이후의 가이드에서는 독립적으로 Vuex를 테스트하는 방법에 대해 다루겠습니다.")])])}),[],!1,null,null,null);e.default=r.exports}}]);